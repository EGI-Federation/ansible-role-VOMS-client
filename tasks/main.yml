---
# tasks file for voms-client
- name: Ensure packages are present
  package:
    name: "{{ item }}"
    state: present
  loop: "{{ prerequisites[(ansible_os_family|lower)][ansible_distribution_major_version]}}"

- name: Ensure Required VOMS directories
  file:
    path: "{{ item }}"
    state: "directory"
  loop:
    - "{{voms_dir}}"
    - "{{ vomses_dir }}"

- name: Get all the VOMS info
  get_url:
    url: "{{ lavoisier.base_url  }}/{{ lavoisier.endpoints.vo_voms }}"
    dest: /tmp/vo_voms.json
  creates: /tmp/vo_voms.json
  delegate_to: localhost

- name: Get the VO Cert Info
  get_url:
    url: "{{ lavoisier.base_url }}/{{ lavoisier.endpoints.vo_certs }}"
    dest: /tmp/vo_certs.json
  creates: /tmp/vo_certs.json
  delegate_to: localhost

- name: Add a cron job to get the VOMS VO file
  debug:
    msg: "I guess?"
    verbosity: 2

- name: Configure specified VOs
  include_vars:
    file: "{{ item.file }}"
    name: "{{ item.name }}"
  loop:
    - file: /tmp/vo_voms.json
      name: vo_voms
    - file: /tmp/vo_certs.json
      name: vo_certs

- name: Create LSC directories
  file:
    path: "{{ voms_dir }}/{{ item }}"
    state: directory
  loop: "{{ vo_certs |json_query('results[*].host')}}"

# LSC files should have the format:
# certificate DN
# CA signing authority
- name: Ensure the LSC files are present
  copy:
    dest: "{{ voms_dir }}/{{ item.host | default(omit) }}.lsc"
    content: |
                      "{{ item.X509Cert[0].DN[0] | default(omit) }}"
                      "{{ item.X509Cert[1].CA_DN[0] | default (omit)}}"
  loop: "{{ vo_certs | json_query('results[*]') }}"


# See http://italiangrid.github.io/voms/documentation/voms-clients-guide/3.0.3/#vomses
# Format is "vo_name" "hostname" "port" "dn" "alias"
- name: Ensure vomses are present
  copy:
    dest: "{{ vomses_dir }}/{{ item.Vo[0].name[0]}}.{{ item.Vo[1].VoVomsServer[0].VoVomsServer[0].hostname[0]}}"
    content: "{{ item.Vo[0].name[0]}} {{ item.Vo[1].VoVomsServer[0].VoVomsServer[0].hostname[0]}} {{ item.Vo[1].VoVomsServer[0].vomses_port }} dn alias"
  loop: "{{ vo_voms | json_query('data[*]')}}"
  ignore_errors: true
